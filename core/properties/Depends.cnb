{
	"cells" : 
	[
		{
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "\\property{Depends}{Makes an object implicitly dependent on other objects.}\n\nMakes an object implicitly dependent on other objects, i.e.~assumes\nthat the indicated object is a function of the arguments of the\nproperty. For example"
				}
			],
			"hidden" : true,
			"source" : "\\property{Depends}{Makes an object implicitly dependent on other objects.}\n\nMakes an object implicitly dependent on other objects, i.e.~assumes\nthat the indicated object is a function of the arguments of the\nproperty. For example"
		},
		{
			"cell_origin" : "client",
			"cell_type" : "input",
			"cells" : 
			[
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property Coordinate to~}x.\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property Depends to~}\\phi.\\end{dmath*}"
				}
			],
			"source" : "x::Coordinate;\n\\phi::Depends(x);"
		},
		{
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "makes $\\phi$ an implicit function of $x$. Instead of indicating the\ncoordinate on which the object depends, it is also possible to\nindicate which derivatives would yield a non-zero answer, as in"
				}
			],
			"hidden" : true,
			"source" : "makes $\\phi$ an implicit function of $x$. Instead of indicating the\ncoordinate on which the object depends, it is also possible to\nindicate which derivatives would yield a non-zero answer, as in"
		},
		{
			"cell_origin" : "client",
			"cell_type" : "input",
			"cells" : 
			[
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property Derivative to~}\\nabla{\\#}.\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property Depends to~}\\phi.\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : "\\nabla_{m}(\\phi c \\sin(y))"
						}
					],
					"source" : "\\begin{dmath*}{}\\nabla_{m}\\left(\\phi c \\sin{y}\\right)\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : "c \\sin(y) \\nabla_{m}(\\phi)"
						}
					],
					"source" : "\\begin{dmath*}{}c \\sin{y} \\nabla_{m}{\\phi}\\end{dmath*}"
				}
			],
			"source" : "\\nabla{#}::Derivative;\n\\phi::Depends(\\nabla{#});\nex:=\\nabla_{m}{\\phi c \\sin{y}};\nunwrap(_);"
		},
		{
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "(Note: if you did this in Cadabra 1.x you could write \\verb|Depends(\\nabla)|; this is no longer \npossible in 2.x and you need to write the full pattern \\verb|Depends(\\nabla{#})|). \nFinally, it is possible to use an index name to indicate on which\ncoordinates a field depends,"
				}
			],
			"hidden" : true,
			"source" : "(Note: if you did this in Cadabra 1.x you could write \\verb|Depends(\\nabla)|; this is no longer \npossible in 2.x and you need to write the full pattern \\verb|Depends(\\nabla{#})|). \nFinally, it is possible to use an index name to indicate on which\ncoordinates a field depends,"
		},
		{
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "To make a tensor with any type and number of indices \\prop{Depend} on something else,\nuse"
				}
			],
			"hidden" : true,
			"source" : "To make a tensor with any type and number of indices \\prop{Depend} on something else,\nuse"
		},
		{
			"cell_origin" : "client",
			"cell_type" : "input",
			"cells" : 
			[
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property Depends to~}h\\left(\\#\\right).\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : "\\nabla_{m}(c d h^{0 t} h_{t 0} h^{0}_{0})"
						}
					],
					"source" : "\\begin{dmath*}{}\\nabla_{m}\\left(c d h^{0 t} h_{t 0} h^{0}\\,_{0}\\right)\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : "c d \\nabla_{m}(h^{0 t} h_{t 0} h^{0}_{0})"
						}
					],
					"source" : "\\begin{dmath*}{}c d \\nabla_{m}\\left(h^{0 t} h_{t 0} h^{0}\\,_{0}\\right)\\end{dmath*}"
				}
			],
			"source" : "h{#}::Depends(\\nabla{#});\nex:=\\nabla_{m}{ c d h^{0 t} h_{t 0} h^{0}_{0} };\nunwrap(_);"
		},
		{
			"cell_origin" : "client",
			"cell_type" : "input",
			"cells" : 
			[
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property Indices(position=free) to~}\\left[m,~\\discretionary{}{}{} n,~\\discretionary{}{}{} p,~\\discretionary{}{}{} q\\right].\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property Depends to~}\\phi.\\end{dmath*}"
				}
			],
			"source" : "{m,n,p,q}::Indices(vector);\n\\phi::Depends(m);"
		},
		{
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "\nIf you want to make an object depend on more than one thing, you need\nto specify them all in one \\prop{Depends} property. If you specify\nthem in two separate properties, the last property will overwrite\nthe previous one. Therefore, you get"
				}
			],
			"hidden" : true,
			"source" : "\nIf you want to make an object depend on more than one thing, you need\nto specify them all in one \\prop{Depends} property. If you specify\nthem in two separate properties, the last property will overwrite\nthe previous one. Therefore, you get"
		},
		{
			"cell_origin" : "client",
			"cell_type" : "input",
			"cells" : 
			[
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property Accent to~}\\widehat{\\#}.\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property Coordinate to~}\\left(x, \\linebreak[0] y\\right).\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property PartialDerivative to~}\\partial{\\#}.\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property Depends to~}A.\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property Depends to~}A.\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\widehat{A}\\end{dmath*}"
				},
				{
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}0\\end{dmath*}"
				}
			],
			"source" : "\\hat{#}::Accent;\n{x,y}::Coordinate;\n\\partial{#}::PartialDerivative;\nA::Depends(\\hat{#});\nA::Depends(x);\nex:=\\hat{A};\nunwrap(ex);"
		},
		{
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : ""
		}
	],
	"description" : "Cadabra JSON notebook format",
	"version" : 1
}
