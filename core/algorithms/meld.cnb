{
	"cell_id" : 1330279837439687649,
	"cells" : 
	[
		{
			"cell_id" : 12813496339189008854,
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_id" : 15852928793838010821,
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "\\algorithm{meld}{Combine terms when allowed by symmetries.}\n\nIn a sum of terms, combine terms using mono-term and multi-term symmetries such that\nthe expression does not use an overcomplete basis. The \\algo{meld} algorithm does \\emph{not}\nrewrite the expression to a canonical form, but it instead combines terms such that no terms\nremain which are a linear combination of the other terms. It can hence be used to prove equivalency of\nexpressions under both mono-term and multi-term symmetries."
				}
			],
			"source" : "\\algorithm{meld}{Combine terms when allowed by symmetries.}\n\nIn a sum of terms, combine terms using mono-term and multi-term symmetries such that\nthe expression does not use an overcomplete basis. The \\algo{meld} algorithm does \\emph{not}\nrewrite the expression to a canonical form, but it instead combines terms such that no terms\nremain which are a linear combination of the other terms. It can hence be used to prove equivalency of\nexpressions under both mono-term and multi-term symmetries."
		},
		{
			"cell_id" : 10430932811586932061,
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_id" : 13010077731798931907,
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "A typical use cases where \\algo{meld} is preferable over e.g.~\\algo{canonicalise} is when \nthe expression contains tensors with multi-term symmetries:"
				}
			],
			"hidden" : true,
			"source" : "A typical use cases where \\algo{meld} is preferable over e.g.~\\algo{canonicalise} is when \nthe expression contains tensors with multi-term symmetries:"
		},
		{
			"cell_id" : 323968739795205784,
			"cell_origin" : "client",
			"cell_type" : "input",
			"cells" : 
			[
				{
					"cell_id" : 9223372036854775816,
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property TableauSymmetry to~}R_{a b c d}.\\end{dmath*}"
				},
				{
					"cell_id" : 9223372036854775817,
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_id" : 9223372036854775818,
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : "R_{a b c d} R_{a b c d} + R_{a b c d} R_{a c b d}"
						}
					],
					"source" : "\\begin{dmath*}{}R_{a b c d} R_{a b c d}+R_{a b c d} R_{a c b d}\\end{dmath*}"
				},
				{
					"cell_id" : 9223372036854775819,
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_id" : 9223372036854775820,
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : "3R_{a b c d} R_{a c b d}"
						}
					],
					"source" : "\\begin{dmath*}{}3R_{a b c d} R_{a c b d}\\end{dmath*}"
				}
			],
			"source" : "R_{a b c d}::RiemannTensor;\nex:=R_{a b c d}R_{a b c d} + R_{a b c d}R_{a c b d};\nmeld(ex);"
		},
		{
			"cell_id" : 15791155294640585690,
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_id" : 549755148636681523,
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "What has happened here is that the algorithm figured out that the first term is \nexpressible in terms of the second, and has combined the two. If you write the\nterms in the opposite order, \\algo{meld} still combines them, but now in the form\nof the other term:"
				}
			],
			"hidden" : true,
			"source" : "What has happened here is that the algorithm figured out that the first term is \nexpressible in terms of the second, and has combined the two. If you write the\nterms in the opposite order, \\algo{meld} still combines them, but now in the form\nof the other term:"
		},
		{
			"cell_id" : 9029450935143328467,
			"cell_origin" : "client",
			"cell_type" : "input",
			"cells" : 
			[
				{
					"cell_id" : 9223372036854775822,
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_id" : 9223372036854775823,
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : "R_{a b c d} R_{a c b d} + R_{a b c d} R_{a b c d}"
						}
					],
					"source" : "\\begin{dmath*}{}R_{a b c d} R_{a c b d}+R_{a b c d} R_{a b c d}\\end{dmath*}"
				},
				{
					"cell_id" : 9223372036854775824,
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_id" : 9223372036854775825,
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : " 3/2 R_{a b c d} R_{a b c d}"
						}
					],
					"source" : "\\begin{dmath*}{}\\frac{3}{2}R_{a b c d} R_{a b c d}\\end{dmath*}"
				}
			],
			"source" : "ex:=R_{a b c d}R_{a c b d}+ R_{a b c d}R_{a b c d};\nmeld(ex);"
		},
		{
			"cell_id" : 1216084673125169191,
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_id" : 6488164179292980876,
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "So \\algo{meld} does not canonicalise, but rather writes the expression such that there\nremain no linear dependencies between terms."
				}
			],
			"hidden" : true,
			"source" : "So \\algo{meld} does not canonicalise, but rather writes the expression such that there\nremain no linear dependencies between terms."
		},
		{
			"cell_id" : 4207227977087905811,
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_id" : 16224843818528585899,
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "This algorithm can of course be used for simpler situations, e.g.~one which uses\nmono-term symmetries only:"
				}
			],
			"hidden" : true,
			"source" : "This algorithm can of course be used for simpler situations, e.g.~one which uses\nmono-term symmetries only:"
		},
		{
			"cell_id" : 4713573064776445830,
			"cell_origin" : "client",
			"cell_type" : "input",
			"cells" : 
			[
				{
					"cell_id" : 9223372036854775827,
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"source" : "\\begin{dmath*}{}\\text{Attached property AntiSymmetric to~}A_{m n}.\\end{dmath*}"
				},
				{
					"cell_id" : 9223372036854775828,
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_id" : 9223372036854775829,
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : "A_{m n}-A_{n m}"
						}
					],
					"source" : "\\begin{dmath*}{}A_{m n}-A_{n m}\\end{dmath*}"
				},
				{
					"cell_id" : 9223372036854775830,
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_id" : 9223372036854775831,
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : "-2A_{n m}"
						}
					],
					"source" : "\\begin{dmath*}{}-2A_{n m}\\end{dmath*}"
				}
			],
			"source" : "A_{m n}::AntiSymmetric;\nex:=A_{m n} - A_{n m};\nmeld(ex);"
		},
		{
			"cell_id" : 11870955447027965657,
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_id" : 8936521076228235993,
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "The algorithm also handles cyclic symmetries of traces:"
				}
			],
			"hidden" : true,
			"source" : "The algorithm also handles cyclic symmetries of traces:"
		},
		{
			"cell_id" : 406611350630800730,
			"cell_origin" : "client",
			"cell_type" : "input",
			"cells" : 
			[
				{
					"cell_id" : 9223372036854775833,
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_id" : 9223372036854775834,
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : "tr(u^{\\mu} u^{\\mu} u^{\\nu} u^{\\nu})-tr(u^{\\mu} u^{\\nu} u^{\\nu} u^{\\mu})"
						}
					],
					"source" : "\\begin{dmath*}{}tr\\left(u^{\\mu} u^{\\mu} u^{\\nu} u^{\\nu}\\right)-tr\\left(u^{\\mu} u^{\\nu} u^{\\nu} u^{\\mu}\\right)\\end{dmath*}"
				},
				{
					"cell_id" : 9223372036854775835,
					"cell_origin" : "server",
					"cell_type" : "latex_view",
					"cells" : 
					[
						{
							"cell_id" : 9223372036854775836,
							"cell_origin" : "server",
							"cell_type" : "input_form",
							"source" : "0"
						}
					],
					"source" : "\\begin{dmath*}{}0\\end{dmath*}"
				}
			],
			"source" : "{\\mu,\\nu}::Indices(vector).\nu^{\\mu}::ImplicitIndex.\nu^{\\mu}::SelfNonCommuting.\ntr{#}::Trace.\nex := tr{u^{\\mu} u^{\\mu} u^{\\nu} u^{\\nu}} - \n    tr{u^{\\mu} u^{\\nu} u^{\\nu} u^{\\mu}};\nmeld(ex);"
		},
		{
			"cell_id" : 130835195174808300,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : ""
		}
	],
	"description" : "Cadabra JSON notebook format",
	"version" : 1
}
