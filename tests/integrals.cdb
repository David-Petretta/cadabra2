
def test01():
    __cdbkernel__=create_scope()
    \partial{#}::PartialDerivative;
    a::Depends(\partial{#});
    ex:= \int{ \partial_{0}{a} \partial_{0}{a} }{x};
    integrate_by_parts(_, $a$);
    tst:= \int{ -a \partial_{0 0}{a} }{x} - @(ex);
    assert(tst==0)
    print("Test 01 passed")

test01()
        
def test02():
    __cdbkernel__=create_scope()
    \partial{#}::PartialDerivative;
    a::Depends(\partial{#});
    ex:= \int{ a \partial_{0}{\partial_{0}{a}} }{x};
    integrate_by_parts(_, $\partial_{0}{a}$);
    tst:= \int{ - \partial_{0}{a} \partial_{0}{a} }{x} - @(ex);
    assert(tst==0)
    print("Test 02 passed")

test02()

def test03():
    __cdbkernel__=create_scope()
    \nabla{#}::Derivative;
    a::Depends(\nabla{#});
    ex:= \int{ a \nabla_{0}{\nabla_{0}{a}} }{x};
    integrate_by_parts(_, $a$);
    tst:= \int{ a \nabla_{0}{\nabla_{0}{a}} }{x} - @(ex);
    assert(tst==0)
    print("Test 03 passed")

test03()

def test04():
    __cdbkernel__=create_scope()
    \partial{#}::PartialDerivative;        
    ex:= \int{ a \partial_{0 0}{b} c }{x};
    integrate_by_parts(_, $b$);
    tst:= \int{ a \partial_{0 0}{b} c }{x} - @(ex);
    assert(tst==0)
    print("Test 04 passed")

test04()

def test05():
    __cdbkernel__=create_scope()
    \partial{#}::PartialDerivative;
    ex:=  \int{  A_{i j} }{x};
    integrate_by_parts(_, $h$)  
    tst:= \int{  A_{i j} }{x} - @(ex);
    assert(tst==0)
    print("Test 05a passed")
    ex:= \int{ h A_{i j} }{x};
    integrate_by_parts(_, $h$)
    tst:= \int{ h A_{i j} }{x} - @(ex);
    assert(tst==0)
    print("Test 05b passed")
    \partial{#}::PartialDerivative;
    ex:=  \int{  A_{i j} + \partial_{i j}{h} }{x};
    integrate_by_parts(_, $h$)
    tst:=  \int{  A_{i j} }{x} - @(ex);
    assert(tst==0)
    print("Test 05c passed")

test05()
