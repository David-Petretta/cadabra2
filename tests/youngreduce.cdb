# Testing that some expressions are canonicalised
# properly using the young_reduce algorithm

def test01():
	__cdbkernel__ = create_scope()
	S_{a b c}::Symmetric;
	young_reduce($S_{a b c}S_{b a c} + S_{b a c}S_{c a b}$, $S_{a b c}S_{a b c}$);
	assert(ex1 == $2S_{a b c}S_{a b c}$)
test01()

def test02():
	__cdbkernel__ = create_scope()
	A_{a b c}::AntiSymmetric.
	ex = young_reduce($A_{a b c} - A_{b a c}$, $A_{a b c}$)
	assert ex == $2A_{a b c}$
test02()

def test03():
	__cdbkernel__ = create_scope()
	A_{a b c}::AntiSymmetric.
	ex = young_reduce($A_{a b c} + A_{a c b}$, $A_{a b c}$)
	assert ex == $0$
test03()

def test04():
	__cdbkernel__ = create_scope()
	A_{a b c}::AntiSymmetric.
	ex = young_reduce($A_{c a b}A_{b a c} + A_{b c a}A_{c b a}$, $2A_{a b c}A_{a b c}$)
	assert ex == $-2A_{a b c}A_{a b c}$
test04()

def test05():
	__cdbkernel__ = create_scope()
	A_{a b}::AntiSymmetric;
	ex = young_reduce($A_{b a}$, $A_{a b}$);
	assert(ex == $-A_{a b}$)
test05()

def test06():
	__cdbkernel__ = create_scope()
	R_{a b c d}::RiemannTensor.
	ex = young_reduce($R_{a b c d}R_{a b c d} + R_{a b c d}R_{a c b d}$, $R_{a b c d}R_{a b c d}$)
	assert ex == $3/2 R_{a b c d}R_{a b c d}$
test06()

def test07():
	__cdbkernel__ = create_scope()
	R_{a b c d}::RiemannTensor.
	ex = young_reduce($R_{a b c d}R_{a b c d} + R_{a b c d}R_{a c b d}$, $R_{a b c d}R_{a c b d}$)
	assert ex == $3 R_{a b c d}R_{a c b d}$
test07()

def test08():
	__cdbkernel__ = create_scope()
	R_{a b c d}::RiemannTensor.
	ex = young_reduce($R_{a b c d} + R_{a c d b} + R_{a d b c}$, $R_{a b c d}$)
	assert ex == $0$
test08()

def test09():
	__cdbkernel__ = create_scope()
	R_{a b c d}::RiemannTensor.
	ex = young_reduce($R_{a b c d} + R_{a d b c}$, $R_{a c d b}$)
	assert ex == $-R_{a c d b}$
test09()

def test10():
	__cdbkernel__ = create_scope()
	{a, b, c, d, e, f, g, h}::Indices.
	A_{a b}::AntiSymmetric.
	S_{a b}::Symmetric.
	ex = $A_{a b}S_{c d}A_{e f}S_{g h} + A_{b a}S_{c d}A_{e f}S_{h g}$
	young_reduce(ex, $A_{a b}S_{c d}A_{e f}S_{g h}$)
	assert ex == $0$
test10()

def test_11():
	__cdbkernel__ = create_scope()
	{a, b, c, d, e, f, g, h}::Indices.
	T_{a b c d e f g h}::Symmetric.
	ex = young_reduce($T_{b a d c f e h g}$, $T_{a b c d e f g h}$)
	assert ex == $T_{a b c d e f g h}$
test11()
