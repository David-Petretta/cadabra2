# Create Windows installer on a github release event.  This assumes
# that the cadabra version is the same as the release name, and it
# will attempt to add the installer file to the release assets.

name: Windows 11

on: [push]

# on:
#   release:
#     types: [created]

defaults:
    run:
      shell: msys2 {0}

jobs:
  build:
    runs-on: windows-latest
    name: Windows 11

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          curl
          git
          pacman -S mingw-w64-ucrt-x86_64-gcc
          pacman -S mingw-w64-ucrt-x86_64-gtkmm3
          pacman -S mingw-w64-ucrt-x86_64-boost    
          pacman -S mingw-w64-ucrt-x86_64-sqlite3
          pacman -S mingw-w64-ucrt-x86_64-cmake
          pacman -S mingw-w64-ucrt-x86_64-python-matplotlib
          pacman -S mingw-w64-ucrt-x86_64-python-sympy
          
    - name: Authenticate GitHub CLI
      run: gh auth setup-git
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    - uses: actions/checkout@master
      name: Checkout source
      
    - name: Build
      shell: msys2 {0}      
      run: |
        mkdir build
        cd build
        cmake ..
        ninja
        ninja install

    - name: Set version variables from output of cmake
      run: |
        VER=$(cat ${{ github.workspace }}/build/VERSION)
        echo "VERSION=$VER" >> $GITHUB_ENV

    - name: Upload release assets
      run: |
        ls ${{ github.workspace }}/artifacts/
        gh release upload "${{ env.VERSION }}" cadabra2-${{ env.VERSION }}-win64.exe --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

